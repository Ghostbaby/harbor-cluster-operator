apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: harborclusters.goharbor.io
spec:
  group: goharbor.io
  names:
    kind: HarborCluster
    listKind: HarborClusterList
    plural: harborclusters
    singular: harborcluster
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: HarborCluster is the Schema for the harborclusters API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: HarborClusterSpec defines the desired state of HarborCluster
          properties:
            adminPasswordSecret:
              description: Password for the root admin
              type: string
            certificateIssuerRef:
              description: The issuer for Harbor certificates. If the 'kind' field
                is not set, or set to 'Issuer', an Issuer resource with the given
                name in the same namespace as the Certificate will be used. If the
                'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the provided
                name will be used. The 'name' field in this stanza is required at
                all times.
              properties:
                group:
                  type: string
                kind:
                  type: string
                name:
                  type: string
              required:
              - name
              type: object
            chartMuseum:
              description: Extra configuration options for chartmeseum
              properties:
                absoluteURL:
                  type: boolean
              type: object
            clair:
              description: Extra configuration options for clair scanner
              properties:
                updateInterval:
                  type: integer
                vulnerabilitySources:
                  items:
                    type: string
                  type: array
              type: object
            database:
              description: database service (PostgresSQL) configuration
              properties:
                kind:
                  description: Set the kind of which redis service to be used, inCluster
                    or external.
                  enum:
                  - inCluster
                  - external
                  type: string
                spec:
                  properties:
                    connectTimeout:
                      type: integer
                    replicas:
                      type: integer
                    resources:
                      description: ResourceRequirements describes the compute resource
                        requirements.
                      properties:
                        limits:
                          additionalProperties:
                            type: string
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                        requests:
                          additionalProperties:
                            type: string
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                      type: object
                    secretName:
                      description: 'External params following. The secret must contains
                        "host","port","database","usernane" and "password". host:
                        192.168.1.1 port: 5432 username: root password: password database:
                        database'
                      type: string
                    sslConfig:
                      type: string
                    storage:
                      type: string
                    storageClassName:
                      type: string
                    version:
                      type: string
                  type: object
              required:
              - kind
              - spec
              type: object
            imageSource:
              description: Source registry of images, the default is dockerhub
              properties:
                imagePullSecret:
                  type: string
                registry:
                  type: string
              type: object
            jobService:
              description: Extra configuration options for jobservices
              properties:
                replicas:
                  type: integer
                workerCount:
                  format: int32
                  type: integer
              required:
              - replicas
              type: object
            notary:
              description: Extra configuration options for notary
              properties:
                publicUrl:
                  pattern: ^https?://.*$
                  type: string
              required:
              - publicUrl
              type: object
            paused:
              description: Indicates that the harbor is paused.
              type: boolean
            priority:
              description: The Maximum priority. Deployments may be created with priority
                in interval ] priority - 100 ; priority ]
              format: int32
              type: integer
            publicURL:
              description: The url exposed to clients to access harbor
              pattern: ^https?://.*$
              type: string
            redis:
              description: Cache service(Redis) configurations might be external redis
                services or inCluster redis services
              properties:
                kind:
                  description: Set the kind of which redis service to be used, inCluster
                    or external. Setting up a harbor-cluster with external redis service
                    should provide client params to communicate. The difference between
                    inCluster redis and external redis is that the inCluster redis
                    installed automatically.
                  enum:
                  - inCluster
                  - external
                  type: string
                spec:
                  properties:
                    groupName:
                      type: string
                    hosts:
                      items:
                        properties:
                          host:
                            type: string
                          port:
                            type: string
                        type: object
                      type: array
                    poolSize:
                      description: Maximum number of socket connections. Default is
                        10 connections per every CPU as reported by runtime.NumCPU.
                      type: integer
                    schema:
                      enum:
                      - sentinel
                      - redis
                      type: string
                    secretName:
                      description: External params following. The secret must contains
                        "password".
                      type: string
                    sentinel:
                      properties:
                        replicas:
                          type: integer
                      type: object
                    server:
                      properties:
                        replicas:
                          type: integer
                        resources:
                          description: ResourceRequirements describes the compute
                            resource requirements.
                          properties:
                            limits:
                              additionalProperties:
                                type: string
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              additionalProperties:
                                type: string
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                          type: object
                        storage:
                          description: the size of storage used in redis.
                          type: string
                        storageClassName:
                          type: string
                      type: object
                    tlsConfig:
                      description: TLS Config to use. When set TLS will be negotiated.
                        set the secret which type of Opaque, and contains "tls.key","tls.crt","ca.crt".
                      type: string
                  type: object
              required:
              - kind
              - spec
              type: object
            replicas:
              description: Pod instance number
              type: integer
            storage:
              description: Storage service configurations. Might be external cloud
                storage services or inCluster storage (minIO)
              properties:
                azure:
                  description: Azure options.
                  properties:
                    accountkey:
                      type: string
                    accountname:
                      type: string
                    container:
                      type: string
                    realm:
                      type: string
                  required:
                  - accountkey
                  - accountname
                  - container
                  type: object
                gcs:
                  description: Gcs options.
                  properties:
                    bucket:
                      type: string
                    chunksize:
                      type: string
                    encodedkey:
                      description: The base64 encoded json file which contains the
                        key
                      type: string
                    rootdirectory:
                      type: string
                  required:
                  - bucket
                  - encodedkey
                  - rootdirectory
                  type: object
                kind:
                  description: set the kind of which storage service to be used. Set
                    the kind as "azure", "gcs", "s3", "oss", "swift" or "inCluster",
                    and fill the information. in the options section. inCluster indicates
                    the local storage service of harbor-cluster. We use minIO as a
                    default built-in object storage service.
                  enum:
                  - inCluster
                  - azure
                  - gcs
                  - s3
                  - oss
                  - swift
                  type: string
                options:
                  description: inCLuster options.
                  properties:
                    provider:
                      description: inCluster Provider, just support minIO now.
                      type: string
                    spec:
                      properties:
                        replicas:
                          description: Supply number of replicas. For standalone mode,
                            supply 1. For distributed mode, supply 4 to 16 drives
                            (should be even). Note that the operator does not support
                            upgrading from standalone to distributed mode.
                          format: int32
                          type: integer
                        resources:
                          description: If provided, use these requests and limit for
                            cpu/memory resource allocation
                          properties:
                            limits:
                              additionalProperties:
                                type: string
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              additionalProperties:
                                type: string
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                          type: object
                        version:
                          description: Version defines the MinIO Client (mc) Docker
                            image version.
                          type: string
                        volumeClaimTemplate:
                          description: VolumeClaimTemplate allows a user to specify
                            how volumes inside a MinIOInstance
                          properties:
                            apiVersion:
                              description: 'APIVersion defines the versioned schema
                                of this representation of an object. Servers should
                                convert recognized schemas to the latest internal
                                value, and may reject unrecognized values. More info:
                                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                              type: string
                            kind:
                              description: 'Kind is a string value representing the
                                REST resource this object represents. Servers may
                                infer this from the endpoint the client submits requests
                                to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            metadata:
                              description: 'Standard object''s metadata. More info:
                                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                              type: object
                            spec:
                              description: 'Spec defines the desired characteristics
                                of a volume requested by a pod author. More info:
                                https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                              properties:
                                accessModes:
                                  description: 'AccessModes contains the desired access
                                    modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                  items:
                                    type: string
                                  type: array
                                dataSource:
                                  description: 'This field can be used to specify
                                    either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot
                                    - Beta) * An existing PVC (PersistentVolumeClaim)
                                    * An existing custom resource/object that implements
                                    data population (Alpha) In order to use VolumeSnapshot
                                    object types, the appropriate feature gate must
                                    be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource)
                                    If the provisioner or an external controller can
                                    support the specified data source, it will create
                                    a new volume based on the contents of the specified
                                    data source. If the specified data source is not
                                    supported, the volume will not be created and
                                    the failure will be reported as an event. In the
                                    future, we plan to support more data source types
                                    and the behavior of the provisioner may change.'
                                  properties:
                                    apiGroup:
                                      description: APIGroup is the group for the resource
                                        being referenced. If APIGroup is not specified,
                                        the specified Kind must be in the core API
                                        group. For any other third-party types, APIGroup
                                        is required.
                                      type: string
                                    kind:
                                      description: Kind is the type of resource being
                                        referenced
                                      type: string
                                    name:
                                      description: Name is the name of resource being
                                        referenced
                                      type: string
                                  required:
                                  - kind
                                  - name
                                  type: object
                                resources:
                                  description: 'Resources represents the minimum resources
                                    the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                  properties:
                                    limits:
                                      additionalProperties:
                                        type: string
                                      description: 'Limits describes the maximum amount
                                        of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                      type: object
                                    requests:
                                      additionalProperties:
                                        type: string
                                      description: 'Requests describes the minimum
                                        amount of compute resources required. If Requests
                                        is omitted for a container, it defaults to
                                        Limits if that is explicitly specified, otherwise
                                        to an implementation-defined value. More info:
                                        https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                      type: object
                                  type: object
                                selector:
                                  description: A label query over volumes to consider
                                    for binding.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                storageClassName:
                                  description: 'Name of the StorageClass required
                                    by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                  type: string
                                volumeMode:
                                  description: volumeMode defines what type of volume
                                    is required by the claim. Value of Filesystem
                                    is implied when not included in claim spec.
                                  type: string
                                volumeName:
                                  description: VolumeName is the binding reference
                                    to the PersistentVolume backing this claim.
                                  type: string
                              type: object
                            status:
                              description: 'Status represents the current information/status
                                of a persistent volume claim. Read-only. More info:
                                https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                              properties:
                                accessModes:
                                  description: 'AccessModes contains the actual access
                                    modes the volume backing the PVC has. More info:
                                    https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                  items:
                                    type: string
                                  type: array
                                capacity:
                                  additionalProperties:
                                    type: string
                                  description: Represents the actual resources of
                                    the underlying volume.
                                  type: object
                                conditions:
                                  description: Current Condition of persistent volume
                                    claim. If underlying persistent volume is being
                                    resized then the Condition will be set to 'ResizeStarted'.
                                  items:
                                    description: PersistentVolumeClaimCondition contails
                                      details about state of pvc
                                    properties:
                                      lastProbeTime:
                                        description: Last time we probed the condition.
                                        format: date-time
                                        type: string
                                      lastTransitionTime:
                                        description: Last time the condition transitioned
                                          from one status to another.
                                        format: date-time
                                        type: string
                                      message:
                                        description: Human-readable message indicating
                                          details about last transition.
                                        type: string
                                      reason:
                                        description: Unique, this should be a short,
                                          machine understandable string that gives
                                          the reason for condition's last transition.
                                          If it reports "ResizeStarted" that means
                                          the underlying persistent volume is being
                                          resized.
                                        type: string
                                      status:
                                        type: string
                                      type:
                                        description: PersistentVolumeClaimConditionType
                                          is a valid value of PersistentVolumeClaimCondition.Type
                                        type: string
                                    required:
                                    - status
                                    - type
                                    type: object
                                  type: array
                                phase:
                                  description: Phase represents the current phase
                                    of PersistentVolumeClaim.
                                  type: string
                              type: object
                          type: object
                      required:
                      - replicas
                      type: object
                  type: object
                oss:
                  description: Oss options.
                  properties:
                    accesskeyid:
                      type: string
                    accesskeysecret:
                      type: string
                    bucket:
                      type: string
                    chunksize:
                      type: string
                    encrypt:
                      type: string
                    endpoint:
                      type: string
                    internal:
                      type: string
                    region:
                      type: string
                    rootdirectory:
                      type: string
                    secure:
                      type: string
                  required:
                  - accesskeyid
                  - accesskeysecret
                  - bucket
                  - endpoint
                  - region
                  type: object
                s3:
                  description: S3 options.
                  properties:
                    accesskey:
                      type: string
                    bucket:
                      type: string
                    chunksize:
                      type: string
                    encrypt:
                      type: boolean
                    keyid:
                      type: string
                    region:
                      type: string
                    regionendpoint:
                      type: string
                    rootdirectory:
                      type: string
                    secretkey:
                      type: string
                    secure:
                      type: boolean
                    storageclass:
                      type: string
                    v4auth:
                      type: boolean
                  required:
                  - accesskey
                  - bucket
                  - region
                  - regionendpoint
                  - secretkey
                  type: object
                swift:
                  description: Swift options.
                  properties:
                    authurl:
                      type: string
                    authversion:
                      type: integer
                    chunksize:
                      type: string
                    container:
                      type: string
                    domain:
                      type: string
                    domainid:
                      type: string
                    endpointtype:
                      type: string
                    insecureskipverify:
                      type: boolean
                    password:
                      type: string
                    prefix:
                      type: string
                    region:
                      type: string
                    secretkey:
                      type: string
                    tempurlcontainerkey:
                      type: boolean
                    tempurlmethods:
                      type: string
                    tenant:
                      type: string
                    tenantid:
                      type: string
                    trustid:
                      type: string
                    username:
                      type: string
                  required:
                  - authurl
                  - container
                  - password
                  - region
                  - tenant
                  - username
                  type: object
              required:
              - kind
              type: object
            tlsSecret:
              description: Secret reference for the TLS certs
              type: string
            trivy:
              description: Extra configuration options for trivy scanner
              properties:
                githubToken:
                  type: string
              type: object
            version:
              description: harbor version to be deployed, this version determines
                the image tags of harbor service components https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
              pattern: ^(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
              type: string
          required:
          - adminPasswordSecret
          - database
          - publicURL
          - redis
          - replicas
          - storage
          - version
          type: object
        status:
          description: HarborClusterStatus defines the observed state of HarborCluster
          properties:
            conditions:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "make" to regenerate code after modifying

                this file'
              items:
                description: HarborClusterCondition contains details for the current
                  condition of this pod.
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another.
                    format: date-time
                    type: string
                  message:
                    description: Human-readable message indicating details about last
                      transition.
                    type: string
                  reason:
                    description: Unique, one-word, CamelCase reason for the condition's
                      last transition.
                    type: string
                  status:
                    description: Status is the status of the condition. Can be True,
                      False, Unknown.
                    type: string
                  type:
                    description: Type is the type of the condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
